---
- name: Install Node Exporter on all Raspberry Pis
  hosts: all
  become: true
  vars_files:
    - ~/ansible-secrets/github_token.yml  # Load the GitHub token securely

  tasks:
    - name: Install dependencies
      apt:
        name:
          - curl
          - tar
        state: present
        update_cache: yes

    - name: Get the latest Node Exporter release version (with authentication)
      uri:
        url: https://api.github.com/repos/prometheus/node_exporter/releases/latest
        method: GET
        headers:
          Authorization: "token {{ vault_github_token }}"
        return_content: yes
      register: github_release

    - name: Extract version tag from JSON response
      set_fact:
        node_exporter_version: "{{ github_release.json.tag_name | regex_replace('^v', '') }}"

    - name: Determine correct architecture for Node Exporter
      set_fact:
        node_exporter_arch: "{% if inventory_hostname == 'pi-hole' %}armv7{% else %}arm64{% endif %}"

    - name: Check if Node Exporter is already installed
      command: "/usr/local/bin/node_exporter --version"
      register: installed_version_output
      ignore_errors: yes
      changed_when: false

    - name: Extract installed version (if available)
      set_fact:
        installed_version: "{{ installed_version_output.stdout | regex_search('version ([^ ]+)', '\\1') | first }}"
      when: installed_version_output.stdout is defined and installed_version_output.stdout | length > 0
      ignore_errors: yes

    - name: Compare installed version with latest
      set_fact:
        needs_update: "{{ installed_version is not defined or installed_version != node_exporter_version }}"

    - name: Download and install Node Exporter if outdated or missing
      block:
        - name: Download Node Exporter binary
          get_url:
            url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-{{ node_exporter_arch }}.tar.gz"
            dest: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ node_exporter_arch }}.tar.gz"
            headers:
              Authorization: "token {{ vault_github_token }}"
          when: needs_update

        - name: Extract Node Exporter package
          unarchive:
            src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ node_exporter_arch }}.tar.gz"
            dest: "/tmp/"
            remote_src: yes
          when: needs_update

        - name: Move Node Exporter binary to /usr/local/bin/
          command: mv /tmp/node_exporter-{{ node_exporter_version }}.linux-{{ node_exporter_arch }}/node_exporter /usr/local/bin/
          when: needs_update

        - name: Make Node Exporter executable
          file:
            path: /usr/local/bin/node_exporter
            mode: '0755'
          when: needs_update

    - name: Deploy `node_exporter.service` only if different
      copy:
        src: files/node_exporter.service
        dest: /etc/systemd/system/node_exporter.service
        owner: root
        group: root
        mode: '0644'
      notify: Restart Node Exporter

    - name: Enable and start Node Exporter
      systemd:
        name: node_exporter
        enabled: yes
        state: started

  handlers:
    - name: Restart Node Exporter
      systemd:
        name: node_exporter
        state: restarted
